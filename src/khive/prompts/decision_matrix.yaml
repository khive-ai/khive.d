# Orchestration Decision Matrix

complexity_assessment:
  simple:
    indicators: ["single_objective", "well_defined_scope", "familiar_domain"]
    agent_count: 1-2
    rounds: 1
    domains: 1
    interaction: "direct_execution"

  medium:
    indicators: ["multiple_objectives", "some_unknowns", "cross_functional"]
    agent_count: 3-5
    rounds: 2-3
    domains: 2-3
    interaction: "parallel_with_synthesis"

  complex:
    indicators: ["many_stakeholders", "high_uncertainty", "novel_approach"]
    agent_count: 6-10
    rounds: 3-4
    domains: 3-5
    interaction: "hierarchical_coordination"

  very_complex:
    indicators: ["research_frontier", "multiple_disciplines", "high_stakes"]
    agent_count: 10+
    rounds: 4-6
    domains: 5+
    interaction: "multi_round_refinement"

parallelization_matrix:
  independent_tasks:
    pattern: "fan_out_fan_in"
    coordination: "minimal"
    quality_gate: "consolidation_agent"

  dependent_tasks:
    pattern: "sequential_pipeline"
    coordination: "checkpoint_validation"
    quality_gate: "stage_gate_approval"

  mixed_dependencies:
    pattern: "hybrid_phases"
    coordination: "dependency_management"
    quality_gate: "phase_validation"

  exploratory:
    pattern: "divergent_convergent"
    coordination: "synthesis_required"
    quality_gate: "multi_perspective_review"

domain_selection_rules:
  core_expertise:
    - match_primary_keywords_to_domains
    - select_deepest_relevant_specialization
    - avoid_domain_overlap_unless_fusion_needed

  cross_cutting_concerns:
    - add_performance_for_optimization_tasks
    - add_security_engineering_for_sensitive_systems # unified name
    - add_async_programming_for_concurrency
    - add_byzantine_fault_tolerance_for_distributed_consensus
    - add_thermodynamic_optimization_for_energy_constraints
    - add_property_testing_for_formal_verification
    - add_protocol_design_for_network_intensive_systems
    - add_temporal_reasoning_for_time_dependent_systems
    - add_trait_based_design_for_rust_systems
    - add_stream_processing_for_real_time_pipelines
    - add_machine_ethics_when_safety_keyword_present
    - add_zero_knowledge_proofs_for_privacy_verification
    - add_edge_computing_for_constrained_devices
    - add_wasm_optimization_for_web_deployment
    # NEW software-dev helpers
    - add_backend_development_for_server_tasks
    - add_frontend_development_for_ui_tasks
    - add_microservices_architecture_for_scalability
    - add_ci_cd_pipelines_for_deployment_automation
    - add_observability_tooling_for_production_systems
    - add_secure_coding_practices_for_security_keywords
    - add_database_design_for_data_modeling
    - add_container_orchestration_for_cloud_native
    - add_api_design_for_service_contracts
    - add_playwright_testing_for_e2e
    - add_nextjs_for_react_fullstack
    - add_typescript_for_strongly_typed_js

  fusion_opportunities:
    - rust_performance + distributed_systems = high_performance_networking
    - memory_systems + temporal_reasoning = temporal_knowledge_graphs
    - category_theory + protocol_design = formal_protocol_verification
    - byzantine_fault_tolerance + hierarchical_clustering = scalable_consensus
    - thermodynamic_optimization + property_testing = energy_aware_verification
    - knowledge_graph_construction + memory_systems = structured_knowledge_accumulation
    - event_sourcing + knowledge_graph_construction = audit_trail_knowledge_graphs
    - rust_performance + protocol_design = zero_copy_network_protocols
    - options_trading + reinforcement_learning = algorithmic_trading_systems
    - zero_knowledge_proofs + edge_computing = privacy_preserving_edge_ai
    - stream_processing + machine_learning = real_time_ai_inference
    - security_engineering + machine_ethics = trustworthy_ai_systems
    - causal_inference + reinforcement_learning = causal_rl_methods
    - compiler_construction + wasm_optimization = domain_specific_web_languages
    - high_frequency_trading + thermodynamic_optimization = energy_efficient_trading
    - backend_development + database_design = scalable_data_services
    - microservices_architecture + api_design = consistent_service_contracts
    - frontend_development + nextjs = universal_react_rendering
    - nextjs + playwright_testing = fullstack_e2e_confidence
    - rust_performance + wasm_optimization = near_native_web_modules

agent_role_selection:
  discovery_phase:
    roles: ["researcher", "analyst"]
    focus: "information_gathering_and_analysis"

  design_phase:
    roles: ["architect", "strategist"]
    focus: "structure_planning_and_strategy"

  implementation_phase:
    roles: ["implementer", "innovator"]
    focus: "solution_building"

  validation_phase:
    roles: ["tester", "critic", "auditor", "reviewer"]
    focus: "verification_and_quality"

  refinement_phase:
    roles: ["reviewer", "commentator"]
    focus: "improvement_and_documentation"

  theoretical_phase:
    roles: ["theorist"]
    focus: "formal_proofs_when_explicitly_needed"

quality_gate_criteria:
  basic:
    requirements:
      - output_format_valid
      - basic_completeness_check
      - no_obvious_errors
    time_cost: "minimal"
    suitable_for: ["routine_tasks", "low_risk_changes"]
    disallow_roles: ["auditor"] # avoids automatic escalation loop

  thorough:
    requirements:
      - cross_agent_consistency
      - consolidation_review
      - conflict_resolution
      - stakeholder_validation
    time_cost: "moderate"
    suitable_for: ["important_decisions", "customer_facing"]

  critical:
    requirements:
      - multi_round_validation
      - external_expert_review
      - formal_verification
      - consensus_required
    time_cost: "high"
    suitable_for: ["safety_critical", "regulatory_compliance"]

  gate_escalation_rules:
    - condition: "auditor_role_present"
      action: "raise_to_thorough_minimum"
      rationale: "systemic_risk_assessment_requires_comprehensive_review"

interaction_patterns:
  parallel:
    when: "independent_tasks_similar_complexity"
    coordination: "results_aggregation"
    communication: "minimal_during_execution"

  sequential:
    when: "strong_dependencies_pipeline_flow"
    coordination: "handoff_protocols"
    communication: "interface_contracts"

  collaborative:
    when: "shared_context_iterative_refinement"
    coordination: "shared_workspace"
    communication: "continuous_sync"

  hierarchical:
    when: "complex_coordination_clear_authority"
    coordination: "manager_worker_pattern"
    communication: "escalation_paths"

resource_estimation:
  time_per_agent:
    simple_task: "15-30min"
    medium_task: "30-60min"
    complex_task: "60-120min"
    research_task: "120-240min"

  coordination_overhead:
    parallel: "10-20%"
    sequential: "5-10%"
    collaborative: "20-30%"
    hierarchical: "15-25%"

  quality_gate_time:
    basic: "5-10min"
    thorough: "15-30min"
    critical: "30-60min"

# Domain-Specific Triggers
domain_triggers:
  microservices:
    keywords: ["microservices", "event-driven", "kafka", "service-mesh"]
    primary_domains: ["microservices-architecture", "event-sourcing"]
    optional_domains: ["protocol-design", "distributed-systems"]

  database_migration:
    keywords: ["database", "migration", "postgresql", "schema"]
    primary_domains: ["database-design", "backend-development"]
    optional_domains: ["ci-cd-pipelines", "devops-automation"]

  api_development:
    keywords: ["api", "endpoint", "rest", "graphql", "rate-limiting"]
    primary_domains: ["api-design", "backend-development"]
    optional_domains: ["redis", "security-architecture"]

  ui_engineering:
    keywords: ["ui", "frontend", "react", "nextjs", "typescript"]
    primary_domains: ["frontend-development"]
    optional_domains: ["nextjs", "playwright-testing", "typescript"]

  security_analysis:
    keywords: ["security", "authentication", "authorization", "vulnerability"]
    primary_domains: ["security-architecture"]
    optional_domains: ["api-design", "backend-development"]

  performance_optimization:
    keywords: ["performance", "optimization", "bundle-size", "load-time"]
    primary_domains: ["frontend-development", "backend-development"]
    optional_domains: ["redis", "database-design"]
