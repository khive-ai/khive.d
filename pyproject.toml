[project]
name = "khive"
version = "0.1.6"
description = "khive mono-repo tooling"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "aiocache>=0.12.3",
    "aiohttp>=3.11.18",
    "aiolimiter>=1.2.1",
    "backoff>=2.2.1",
    "datamodel-code-generator[http]>=0.30.1",
    "openai>=1.76.2,<2",
    "prance>=25.4.8.0",
    "pydantic>=2.11.3",
    "pydantic-settings>=2.9.1",
]

[dependency-groups]
dev = [
    "black[jupyter]>=25.1.0",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.6",
    "isort>=6.0.1",
    "networkx>=3.4",
    "matplotlib>=3.8.0",
    "pytest-asyncio>=0.26.0",
    "pytest>=8.3.5",
    "pandas>=2.2.3",
    "pre-commit>=4.2.0",
    "ruff>=0.11.7",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["khive"]
include-package-data = true

[tool.hatch.build]
exclude = [
    "dev/*",
    "data/*",
    "notebooks/*",
    "tests/*",
    "*.pyc",
    "__pycache__",
    "temp_logs/*",
    "logs/*",
    "verification",
    "scripts",
]

[tool.pytest.ini_options]
markers = [
    "integration: marks tests that require external dependencies or network access",
    "unit: marks fast unit tests"
]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 88

[project.scripts]                # PEP 621 console-scripts table
khive         = "khive.khive_cli:main"


[tool.ruff.lint]

select = [
    "A", # flake8-builtins
    "ARG",   # flake8-unused-arguments
    "ASYNC", # flake8-async
    "B",     # flake8-bugbear
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "E",   # pycodestyle errors
    "EM",  # flake8-errmsg
    "EXE", # flake8-executable
    "F",   # pyflakes
    "FA",  # flake8-future-annotations
    "FLY",  # flynt
    "FURB", # refurb
    "I",    # isort
    "ICN",  # flake8-import-conventions
    "INT",  # flake8-gettext
    "ISC",  # implicit-str-concat
    "LOG",  # flake8-logging
    "N",    # pep8-naming
    "PERF", # perflint
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "RET",  # flake8-return
    "RSE",  # flake8-raise
    "RUF",  # Ruff-specific lints
    "S",    # flake8-bandit
    "SIM",  # flake8-simplify
    "SLF",  # flake8-self
    "SLOT", # flake8-slots
    "TCH", # flake8-type-checking
    "TID", # ban relative imports
    "TRY", # tryceratops
    "UP",  # pyupgrade
    "W",   # pycodestyle warnings
    "YTT", # flake8-2020
]

# pydocstyle.convention = "google"

ignore = [
    "B028",   # No explicit `stacklevel` keyword argument found
    "COM812", # ignore when using ruff-format
    "G004",   # Logging statement uses f-string
    "ISC001", # ignore when using ruff-format
    "N818",   # Exception name should be named with an Error suffix
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
    "S404",   # `subprocess` module is possibly insecure
]

exclude = ["tests/**/hooks/*"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D104", # Missing docstring in public package
    "D200", # One-line docstring should fit on one line with quotes
    "S101", # use of assert
    "S603", # `subprocess` call: check for execution of untrusted input"
    "S106", # Possible hardcoded password assigned to argument: "password"
    "S108", # Probable insecure usage of temporary file or directory: "/tmp"
]
"cookiecutter/*" = [
    "S603", # `subprocess` call: check for execution of untrusted input"
]
"docs/conf.py" = ["A001", "D100"]

[tool.ruff.format]

quote-style = "preserve"
