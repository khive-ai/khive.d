[project]
name = "khive"
version = "0.4.1"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "aiofiles>=22.1.0",
    "fastapi>=0.116.1",
    "fastmcp>=2.11.0",
    "httpx>=0.28.1",
    "lionagi[postgres, sqlite, graph]",
    "mcp>=1.10.0",
    "nest-asyncio>=1.5.0",
    "openai>=1.100.0",
    "plotly>=6.0.0",
    "python-dotenv>=1.1.1",
    "pyyaml>=6.0",
    "streamlit>=1.40.0",
    "tenacity>=8.5.0",
    "uvicorn>=0.35.0",
    "websockets>=14.0",
]

[tool.pytest.ini_options]
# Test discovery
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Essential test execution options
addopts = [
    "-v",                                   # Verbose output for debugging
    "--tb=short",                           # Concise traceback format
    "--strict-markers",                     # Ensure all markers are defined
    "--cov=src/khive",                      # Enable coverage tracking
    "--cov-report=term-missing",            # Show missing coverage lines
]

# Async support
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

# Test markers - only the ones we actually use
markers = [
    # Core test types (actively used)
    "unit: Fast unit tests (<100ms)",
    "integration: Integration tests with dependencies",
    "boundary: Boundary condition and edge case tests",
    "cli: Command-line interface tests",
    "performance: Performance benchmark tests",
    "security: Security validation and vulnerability tests",

    # Additional essential markers for future use
    "slow: Slow-running tests (>5s)",
    "external: Tests requiring external services (OpenAI API, etc.)",
    "mcp: MCP protocol and server tests",
]

# Test environment
env = [
    "KHIVE_TEST_MODE=true",
    "KHIVE_DISABLE_EXTERNAL_APIS=true",
    "PYTHONPATH=src",
    "PYTEST_CURRENT_TEST=true",
    "HYPOTHESIS_PROFILE=ci",
]

# Filter warnings
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning:streamlit.*",
    "ignore::pytest.PytestUnraisableExceptionWarning",
    "ignore::ResourceWarning",
    "ignore::UserWarning:hypothesis.*",
]

# Minimum supported pytest version
minversion = "8.0"

# Log configuration for debugging
log_level = "INFO"
log_cli = false
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

# Test collection timeout
collect_timeout = 60

# Enable traceback cutting for cleaner output
tb_short_cut = true

[tool.coverage.run]
source = ["src/khive"]
omit = [
    "tests/*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
show_missing = true
fail_under = 70.0  # Gradual improvement target, aim for 85-90% eventually

[tool.coverage.xml]
output = "coverage.xml"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "ruff>=0.12.9",
    "pre-commit>=4.3.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.0",
    "pytest-env>=1.1.5",
    "pytest-xdist>=3.6.0",
    "pytest-timeout>=2.3.1",
    "pytest-randomly>=3.15.0",
    "pytest-html>=4.1.1",
    "isort>=6.0.1",
    "mypy>=1.11.0",
    "bandit>=1.7.10",
    "coverage>=7.6.0",
    "hypothesis>=6.138.2",
    "faker>=30.8.2",
    "httpx>=0.27.0",
]


[tool.hatch.build.targets.wheel]
packages = ["src/khive"]

[tool.uv.sources]
lionagi = { path = "../lionagi" }

[project.scripts]                # PEP 621 console-scripts table
khive         = "khive.cli.khive_cli:main"
