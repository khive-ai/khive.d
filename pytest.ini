[tool:pytest]
# Pytest configuration for khive planning service tests
minversion = 6.0

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests across components
    performance: Performance and benchmark tests
    benchmark: Performance benchmark tests requiring timing assertions
    regression: Regression tests for known bug fixes
    slow: Tests that take more than 2 seconds
    external: Tests requiring external services (OpenAI API, etc.)
    consistency: Tests for deterministic behavior validation

# Async support
asyncio_mode = auto

# Output configuration
addopts =
    --strict-markers
    --strict-config
    --tb=short
    --maxfail=10
    -v
    --durations=10
    --cov=khive
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=75

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:.*OpenAI.*
    error::khive.*Warning

# Test execution
timeout = 300
timeout_method = thread

# Coverage configuration
[coverage:run]
source = khive
omit =
    */tests/*
    */test_*
    */__init__.py
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
