# Malicious YAML for testing deserialization security

# Billion laughs attack (XML bomb equivalent for YAML)
billion_laughs: &anchor
  - "payload"
  - *anchor
  - *anchor
  - *anchor
  - *anchor
  - *anchor
  - *anchor
  - *anchor
  - *anchor
  - *anchor

# Large data structures
large_array: &large
  - item1: "data"
  - item2: "data"
  - item3: "data"
  # ... repeated many times
  - item1000: "data"

# Deep nesting attack
deep_nesting:
  level1:
    level2:
      level3:
        level4:
          level5:
            level6:
              level7:
                level8:
                  level9:
                    level10:
                      dangerous_payload: "../../etc/passwd"

# Code execution attempts
python_code: |
  import os
  os.system('rm -rf /')

# Command injection in YAML
command_injection: '; rm -rf /'

# Path traversal in YAML
path_traversal: "../../../etc/passwd"

# XSS in YAML
xss_payload: "<script>alert('XSS')</script>"

# SQL injection in YAML  
sql_injection: "'; DROP TABLE users; --"

# Template injection
template_injection: "{{ ''.__class__.__mro__[1].__subclasses__()[104] }}"

# Prototype pollution
prototype_pollution:
  __proto__:
    admin: true
    isAdmin: true

# Large string payload
large_string

# Binary data attempts
binary_data: "\x00\x01\x02\x03\xff\xfe\xfd\xfc"

# Control characters
control_chars: "\x08\x0c\x0a\x0d\x09"

# Unicode attacks
unicode_attack: "аdmin"  # Cyrillic 'а' instead of ASCII 'a'
unicode_normalization: "\u002e\u002e\u002f\u002e\u002e\u002f\u002e\u002e\u002fetc\u002fpasswd"